# For more information on how to get these values, see https://www.better-auth.com/docs/authentication/google
# Authorised JavaScript origins: http://localhost:1284
# Authorised redirect URIs: http://localhost:1284/api/auth/callback/google
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# For more information on how to get these values, see https://www.better-auth.com/docs/authentication/microsoft
# Authorised redirect URIs: http://localhost:1284/api/auth/callback/microsoft
MICROSOFT_CLIENT_ID=
MICROSOFT_CLIENT_SECRET=

# Box OAuth credentials (optional - for Box storage integration)
# Create a Box app at https://app.box.com/developers/console
# Set OAuth 2.0 Redirect URI: http://localhost:1284/api/auth/oauth2/callback/box
BOX_CLIENT_ID=
BOX_CLIENT_SECRET=

# To generate a secret, just run `openssl rand -base64 32`
BETTER_AUTH_SECRET=
BETTER_AUTH_URL=http://localhost:1284

# Ports for docker containers
SERVER_PORT=1284
WEB_PORT=3000

# URLs
BACKEND_URL=http://localhost:1284
TRUSTED_ORIGINS=http://localhost:3000

# URLs for Next.js client side
NEXT_PUBLIC_BACKEND_URL=http://localhost:1284
NEXT_PUBLIC_FRONTEND_URL=http://localhost:3000

# Database. Make sure the user, password, and database name match the ones in the url
DATABASE_URL=postgres://postgres:postgres@localhost:5432/nimbus
DATABASE_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=nimbus

# Valkey
VALKEY_PORT=6379
VALKEY_HOST=localhost
VALKEY_USERNAME=valkey
VALKEY_PASSWORD=valkey

# Upstash Redis
UPSTASH_REDIS_REST_URL=
UPSTASH_REDIS_REST_TOKEN=

# Resend. Get your api key from here https://resend.com
EMAIL_FROM=support@yourdomain.com
RESEND_API_KEY=your_resend_api_key

# Encryption key for storing sensitive data (required)
# Generate with: openssl rand -base64 32
ENCRYPTION_KEY=

# S3 Provider (optional - for S3 storage integration)
# Get these from AWS IAM Console: https://console.aws.amazon.com/iam/
# Create an IAM user with the following S3 permissions:
# - s3:GetObject, s3:PutObject, s3:DeleteObject (for file operations)
# - s3:ListBucket (for listing files and folders)
# - s3:GetBucketLocation (for bucket validation)
# Then generate access keys for programmatic access
AWS_ACCESS_KEY_ID=your_s3_access_key_here
AWS_BUCKET_NAME=your_s3_bucket_name
AWS_REGION=us-east-1
AWS_SECRET_ACCESS_KEY=your_s3_secret_key_here

# Node environment
NODE_ENV=development

# Edge environment
IS_EDGE_RUNTIME=false

# Wrangler dev
WRANGLER_DEV=false
